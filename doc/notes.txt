Notes:

Data:
This is conceptual contrast to OOP where we have many data structures (classes) with 
operations bound altogether

Persistent ↔ ephemeral

Before moving to next “to process data – we need...”

Functions:
can be stored, passed, and returned just like any other piece of data

Referential transparency of pure functions
Yields to reasoning about program

Mention invokable data structures

Why clojure is not really, really that is pure...because...then next slide

Lazyn...
Shortened title with intention...
Nothing really lazy there like ...not willing to do something...
As much as is required, when is required and nothing else/more...
Now we have seen data, functions, lazyness... let's check out Clojure
through familiar concepts...

Polymorphism:
  It is parametric in contrast to inheritance
  Protocols 
    dispatch only and only on type of first argument, 
    they effectively solve expression problem:
    The expression problem refers to the desire to 
    implement an existing set of abstract methods... C# ext methods

  Multimethods...
    Big switch – if/cond/switch it is not polymorphic
    Imagine fellow developer of yours...
    O-C principle

Encapsulation
  Clojure, if we speak honestly is by default very global :)
  Encapsulation – not necessarily hiding, no, but rather – isolation, 
  separation into discrete parts which are easily assembled..
  Namspaces are pretty static

Do you remember of...identity? (Concurrency)
  Agents – in addition to shown... error handling and failure mode, validation
  Transactions (dosync) – take care of restarts...
  Provides tools but not solution for conc... nothing can replace critical reasoning...
  Right … everything so far was more or less … 
  familiar from other languages... another abstraction 
  level hardly or not achievable at all...

Macros:
  Exp. phase produces code with a larger footprint than source...

  Exp. Inseparable from compilation
  Diff from java ann.proc. Scala comp. Plugins... 
  they expose interal API and data model 
  which has nothing with source...
